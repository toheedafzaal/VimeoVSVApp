<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
    <title></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!--<meta content='IE=Edge' http-equiv='X-UA-Compatible' />-->
   
    <script src="https://player.vimeo.com/api/player.js"></script>
    <style>
        #video-container {
            position: absolute;
            /*background-color: black;*/
            border: none;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            width: 100%;
            height: auto;
        }

        .btn {
            background-color: #EE1A4A;
            border: none;
            color: white;
            padding: 8px 12px;
            font-size: 12px;
            cursor: pointer;
        }

            /* Darker background on mouse-over */
            .btn:hover {
                background-color: #EE1A4A;
                font-size: 14px;
            }
    </style>
</head>

<body>
    <h1> I am html </h1>
        <div id="video-container"></div>
    <script>
        //var videoss = window.external.getVideoIds();
        alert("I am html");
        var savePlaysarr = [];
        var respDblist;
        var arrayVideos = [];
        var isLoadWindow = 0;
        var loopIndex = 0;
        var videotime = [];
        //$(document).ready(function () {
        //    GetloopVideos();
        //});
        var testid;
        var playMovie = function (player, videos, options) {
            //alert("inside play movie function");
            //alert(videos.length);
            //alert(videos[0]);
            if (!videos.length) {
                return false;
            }
            console.log(videos);
            //var video = 'https://vimeo.com/' + videos.shift();
            var id = videos.shift();
            var idReplaced = videos.shift().replace('?h=', '/');
            var video = 'https://vimeo.com/' + idReplaced;
            //var video = 'https://player.vimeo.com/video/503530088?h=35e64d6ee0';
            // alert(video);
            if (!player) {
                options.url = video;
                //console.log(video, 'video*URL');
                testid = video;
                player = new Vimeo.Player('video-container', options);
                player.play();
                //player.getFullscreen().then(function (fullscreen) {
                //    // fullscreen = whether fullscreen is turned on or off
                //    alert("inside fl scren");
                //    options.width= "1600"
                //}).catch(function (error) {
                //    // an error occurred
                //});
                //  toggleFullScreen();

                player.on('fullscreenchange', function (data) {

                    player.getVideoWidth().then(function (width) {
                        alert(width);
                    }).catch(function (err) {
                    
                    })
                    
                  
                })

                player.on('ended', function () {
                    playMovie(player, videos, options)
                })
            } else {
                console.log(video);
                testid = video;
                const idd = video.split("/");
                var videoid = idd[3];
                // alert("next is video id");
                //alert(videoid);
                player.loadVideo({
                    url: 'https://player.vimeo.com/video/' + id,
                    autoplay: 1
                }).then(function () {
                    // alert("Playing");
                    player.play();
                })
                    .catch(function (error) {
                        console.log(testid + '*');
                        GetloopVideos();
                        console.warn(error);
                    });
            }
            player.getEnded(true).then(function (ended) {
                // `ended` indicates whether the video has ended
                if (videos.length == 3) {
                    var respDateTime = GetPlaysTime();
                    videotime.push(respDateTime);
                }
                else if (videos.length == 2) {
                    var respDateTime = GetPlaysTime();
                    videotime.push(respDateTime);
                }
                else if (videos.length == 1) {
                    var respDateTime = GetPlaysTime();
                    videotime.push(respDateTime);
                }
                else if (videos.length == 0) {
                    //alert("inside the save play call");
                    isLoadWindow = 1;
                    loopIndex++;
                    GetloopVideos();
                    SavePlays(respDblist);
                }
            });
        }
        function SavePlays(data) {
            alert("inside save plays");
            console.log(data);
            savePlaysarr = [];
            data.VideosLists.map(function (val, index) {
                if (val.VSVAccountID != null) {
                    var obj = {
                        VSVAccountID: val.VSVAccountID,
                        VidId: val.VidId,
                        PlayTimeStamp: videotime[0]
                    }
                    videotime.shift();
                    savePlaysarr.push(obj);
                }
            })
            if (savePlaysarr.length > 0) {
                //var ccc = JSON.stringify(savePlaysarr);
                //alert(ccc);
                window.external.SavePlaysVideos(savePlaysarr);
            }
        }
        function GetPlaysTime() {
            var date = new Date();
            FormatedDate = moment(date).format("yyyy-MM-DDTHH:mm:ss");
            //alert(FormatedDate);
            return FormatedDate;
        }
        var options = {
            width: screen.availWidth,
            height: window.screen.availHeight - (window.outerHeight - window.innerHeight),
            
        };
        //playMovie(null, videos, options, startTime, endTime);
        function GetloopVideos() {
            arrayVideos = [];
            var EntertainmentVideosResponsee = window.external.GetEntertainmentVideos(loopIndex);
            var EntertainmentVideosResponse = JSON.parse(EntertainmentVideosResponsee);
            if (EntertainmentVideosResponse != null) {
                nn(EntertainmentVideosResponse);
            }
            function nn(EntertainmentVideosResponse) {
                //alert("inside n funtion");
                respDblist = EntertainmentVideosResponse;

                EntertainmentVideosResponse.VideosLists.map(function (val, index) {

                    arrayVideos.push(val.VideoId);

                })
                if (EntertainmentVideosResponse.LoopEnded == true) {
                    // alert("loop ended true");
                    loopIndex = 0;
                }
                if (isLoadWindow === 1) {
                    arrayVideos.unshift(isLoadWindow);
                    // alert("at load window function is called")
                    playMovie(null, arrayVideos, options)
                } else {
                    // alert("yahan hn");
                    playMovie(null, arrayVideos, options)
                }
            }
        }
        GetloopVideos();
        function Exit() {
            window.external.Exit();
        }
        function openDateScreen() {
            window.external.openDateScreen();
        }
    
    </script>
</body>
</html>